{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/components/modal-help/modal-help.component.ts","./src/app/shared/components/modal-help/modal-help.component.html","./src/app/shared/material/material.module.ts","./src/app/shared/model/languages.ts","./src/app/shared/model/speech-error.ts","./src/app/shared/model/speech-event.ts","./src/app/shared/services/actions/action-context.ts","./src/app/shared/services/actions/action-strategy.ts","./src/app/shared/services/actions/change-theme-strategy.ts","./src/app/shared/services/actions/change-title-strategy.ts","./src/app/shared/services/web-apis/speech-recognizer.service.ts","./src/app/shared/services/web-apis/speech-synthesizer.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/style-manager/style-manager.ts","./src/app/web-speech/web-speech.component.ts","./src/app/web-speech/web-speech.component.html","./src/app/web-speech/web-speech.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WebSpeechComponent } from './web-speech/web-speech.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WebSpeechComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ModalHelpComponent } from './shared/components/modal-help/modal-help.component';\n\n@Component({\n  selector: 'wsa-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(public dialog: MatDialog) {}\n\n  openHelp(): void {\n    this.dialog.open(ModalHelpComponent);\n  }\n\n}\n"," \n  <div>\n    <mat-toolbar color=\"primary\">\n      \n      <span>Voice-Driven Web Application</span>\n      <span class=\"fill-space\"></span>\n      <button mat-icon-button (click)=\"openHelp()\">\n        <mat-icon>help</mat-icon>\n      </button>\n    </mat-toolbar>\n  </div>\n\n  <router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from './shared/shared.module';\nimport { WebSpeechModule } from './web-speech/web-speech.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatTableModule } from '@angular/material/table'; // Import MatTableModule\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    WebSpeechModule,\n    HttpClientModule,\n    MatTableModule,\n    MatTooltipModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'wsa-modal-help',\n  templateUrl: './modal-help.component.html',\n  styleUrls: ['./modal-help.component.css']\n})\nexport class ModalHelpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-dialog-content class=\"mat-typography\">\n  <h3>Welcome to POSIBOT</h3>\n  <p>\n     Data persisting through voice recognisation. As a stepping stone for the further developement of product\n     we are introducing a chat bot which captures name and date of birth of a particular user.\n     Now as this chat bot is under development, here is how we persist data.\n     My name is \"YOUR_NAME\" my dob is \"YOUR_DOB\"\n  </p>\n\n \n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Ok</button>\n</mat-dialog-actions>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatListModule } from '@angular/material/list';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSelectModule,\n    MatListModule,\n    MatSidenavModule,\n    MatDialogModule\n  ],\n  exports: [\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSelectModule,\n    MatListModule,\n    MatSidenavModule,\n    MatDialogModule\n  ],\n})\nexport class MaterialModule { }\n","export const languages = ['en-US', 'es-ES'];\nexport const defaultLanguage = languages[0];\n","export enum SpeechError {\n  NoSpeech = 'no-speech',\n  AudioCapture = 'audio-capture',\n  NotAllowed = 'not-allowed',\n  Unknown = 'unknown'\n}\n","export enum SpeechEvent {\n  Start,\n  End,\n  FinalContent,\n  InterimContent\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActionStrategy } from './action-strategy';\nimport { ChangeThemeStrategy } from './change-theme-strategy';\nimport { ChangeTitleStrategy } from './change-title-strategy';\nimport { SpeechSynthesizerService } from '../web-apis/speech-synthesizer.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionContext {\n  private currentStrategy?: ActionStrategy;\n\n  constructor(\n    private changeThemeStrategy: ChangeThemeStrategy,\n    private changeTitleStrategy: ChangeTitleStrategy,\n    private titleService: Title,\n    private speechSynthesizer: SpeechSynthesizerService\n  ) {\n    this.changeTitleStrategy.titleService = titleService;\n  }\n\n  processMessage(message: string, language: string): void {\n    const msg = message.toLowerCase();\n    const hasChangedStrategy = this.hasChangedStrategy(msg, language);\n\n    let isFinishSignal = false;\n    if (!hasChangedStrategy) {\n      isFinishSignal = this.isFinishSignal(msg, language);\n    }\n\n    if (!hasChangedStrategy && !isFinishSignal) {\n      this.runAction(message, language);\n    }\n  }\n\n  runAction(input: string, language: string): void {\n    if (this.currentStrategy) {\n      this.currentStrategy.runAction(input, language);\n    }\n  }\n\n  setStrategy(strategy: ActionStrategy | undefined): void {\n    this.currentStrategy = strategy;\n  }\n\n  private hasChangedStrategy(message: string, language: string): boolean {\n    let strategy: ActionStrategy | undefined;\n    if (message === this.changeThemeStrategy.getStartSignal(language)) {\n      strategy = this.changeThemeStrategy;\n    }\n    if (message === this.changeTitleStrategy.getStartSignal(language)) {\n      strategy = this.changeTitleStrategy;\n    }\n\n    if (strategy) {\n      this.setStrategy(strategy);\n      this.speechSynthesizer.speak(\n        strategy.getInitialResponse(language),\n        language\n      );\n      return true;\n    }\n\n    return false;\n  }\n\n  private isFinishSignal(message: string, language: string): boolean {\n    if (\n      message === this.changeThemeStrategy.getEndSignal(language) ||\n      message === this.changeTitleStrategy.getEndSignal(language)\n    ) {\n      if (this.currentStrategy) {\n        this.speechSynthesizer.speak(\n          this.currentStrategy.getFinishResponse(language),\n          language\n        );\n      }\n      this.setStrategy(undefined);\n      return true;\n    }\n\n    return false;\n  }\n}\n","export abstract class ActionStrategy {\n  protected mapStartSignal: Map<string, string> = new Map<string, string>();\n  protected mapEndSignal: Map<string, string> = new Map<string, string>();\n\n  protected mapInitResponse: Map<string, string> = new Map<string, string>();\n  protected mapFinishResponse: Map<string, string> = new Map<string, string>();\n  protected mapActionDone: Map<string, string> = new Map<string, string>();\n\n  constructor() {\n    this.mapFinishResponse.set('en-US', 'Your action has been completed.');\n    this.mapFinishResponse.set('es-ES', 'La accion ha sido finalizada.');\n  }\n\n  getStartSignal(language: string): string {\n    return this.mapStartSignal.get(language) || '';\n  }\n\n  getEndSignal(language: string): string {\n    return this.mapEndSignal.get(language) || '';\n  }\n\n  getInitialResponse(language: string): string {\n    return this.mapInitResponse.get(language) || '';\n  }\n  getFinishResponse(language: string): string {\n    return this.mapFinishResponse.get(language) || '';\n  }\n\n  abstract runAction(input: string, language: string): void;\n}\n","import { ActionStrategy } from './action-strategy';\nimport { Theme } from '../../model/theme';\nimport { StyleManager } from '../../style-manager/style-manager';\nimport { Injectable } from '@angular/core';\nimport { SpeechSynthesizerService } from '../web-apis/speech-synthesizer.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChangeThemeStrategy extends ActionStrategy {\n  private mapThemes: Map<string, Theme[]> = new Map<string, Theme[]>();\n  private styleManager: StyleManager = new StyleManager();\n\n  constructor(private speechSynthesizer: SpeechSynthesizerService) {\n    super();\n    this.mapStartSignal.set('en-US', 'perform change theme');\n    this.mapStartSignal.set('es-ES', 'iniciar cambio de tema');\n\n    this.mapEndSignal.set('en-US', 'finish change theme');\n    this.mapEndSignal.set('es-ES', 'finalizar cambio de tema');\n\n    this.mapInitResponse.set('en-US', 'Please, tell me your theme name.');\n    this.mapInitResponse.set('es-ES', 'Por favor, mencione el nombre de tema.');\n\n    this.mapActionDone.set('en-US', 'Changing Theme of the Application to');\n    this.mapActionDone.set('es-ES', 'Cambiando el tema de la Aplicación a');\n\n    this.mapThemes.set('en-US', [\n      {\n        keyword: 'deep purple',\n        href: 'deeppurple-amber.css',\n      },\n      {\n        keyword: 'indigo',\n        href: 'indigo-pink.css',\n      },\n      {\n        keyword: 'pink',\n        href: 'pink-bluegrey.css',\n      },\n      {\n        keyword: 'purple',\n        href: 'purple-green.css',\n      },\n    ]);\n    this.mapThemes.set('es-ES', [\n      {\n        keyword: 'púrpura',\n        href: 'deeppurple-amber.css',\n      },\n      {\n        keyword: 'azul',\n        href: 'indigo-pink.css',\n      },\n      {\n        keyword: 'rosa',\n        href: 'pink-bluegrey.css',\n      },\n      {\n        keyword: 'verde',\n        href: 'purple-green.css',\n      },\n    ]);\n  }\n\n  runAction(input: string, language: string): void {\n    const themes = this.mapThemes.get(language) || [];\n    const theme = themes.find((th) => {\n      return input.toLocaleLowerCase() === th.keyword;\n    });\n\n    if (theme) {\n      this.styleManager.removeStyle('theme');\n      this.styleManager.setStyle('theme', `assets/theme/${theme.href}`);\n      this.speechSynthesizer.speak(\n        `${this.mapActionDone.get(language)}: ${theme.keyword}`,\n        language\n      );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { SpeechSynthesizerService } from '../web-apis/speech-synthesizer.service';\nimport { ActionStrategy } from './action-strategy';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChangeTitleStrategy extends ActionStrategy {\n  private title?: Title;\n\n  constructor(private speechSynthesizer: SpeechSynthesizerService) {\n    super();\n    this.mapStartSignal.set('en-US', 'perform change title');\n    this.mapStartSignal.set('es-ES', 'iniciar cambio de título');\n\n    this.mapEndSignal.set('en-US', 'finish change title');\n    this.mapEndSignal.set('es-ES', 'finalizar cambio de título');\n\n    this.mapInitResponse.set('en-US', 'Please, tell me the new title');\n    this.mapInitResponse.set('es-ES', 'Por favor, mencione el nuevo título');\n\n    this.mapActionDone.set('en-US', 'Changing title of the Application to');\n    this.mapActionDone.set('es-ES', 'Cambiando el título de la Aplicación a');\n  }\n\n  set titleService(title: Title) {\n    this.title = title;\n  }\n\n  runAction(input: string, language: string): void {\n    this.title?.setTitle(input);\n    this.speechSynthesizer.speak(\n      `${this.mapActionDone.get(language)}: ${input}`,\n      language\n    );\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SpeechNotification } from '../../model/speech-notification';\nimport { SpeechError } from '../../model/speech-error';\nimport { SpeechEvent } from '../../model/speech-event';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SpeechRecognizerService {\n  recognition!: SpeechRecognition;\n  language!: string;\n  isListening = false;\n\n  constructor(private ngZone: NgZone) {}\n\n  initialize(language: string): boolean {\n    if ('webkitSpeechRecognition' in window) {\n      this.recognition = new webkitSpeechRecognition();\n      this.recognition.continuous = true;\n      this.recognition.interimResults = true;\n      this.setLanguage(language);\n      return true;\n    }\n\n    return false;\n  }\n\n  setLanguage(language: string): void {\n    this.language = language;\n    this.recognition.lang = language;\n  }\n\n  start(): void {\n    if (!this.recognition) {\n      return;\n    }\n\n    this.recognition.start();\n    this.isListening = true;\n  }\n\n  onStart(): Observable<SpeechNotification<never>> {\n    if (!this.recognition) {\n      this.initialize(this.language);\n    }\n\n    return new Observable(observer => {\n      this.recognition.onstart = () => {\n        this.ngZone.run(() => {\n          observer.next({\n            event: SpeechEvent.Start\n          });\n        });\n      };\n    });\n  }\n\n  onEnd(): Observable<SpeechNotification<never>> {\n    return new Observable(observer => {\n      this.recognition.onend = () => {\n        this.ngZone.run(() => {\n          observer.next({\n            event: SpeechEvent.End\n          });\n          this.isListening = false;\n        });\n      };\n    });\n  }\n\n  onResult(): Observable<SpeechNotification<string>> {\n    return new Observable(observer => {\n      this.recognition.onresult = (event: SpeechRecognitionEvent) => {\n        let interimContent = '';\n        let finalContent = '';\n\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          if (event.results[i].isFinal) {\n            finalContent += event.results[i][0].transcript;\n            this.ngZone.run(() => {\n              observer.next({\n                event: SpeechEvent.FinalContent,\n                content: finalContent\n              });\n            });\n          } else {\n            interimContent += event.results[i][0].transcript;\n            // console.log('interim transcript', event, interimContent);\n            this.ngZone.run(() => {\n              observer.next({\n                event: SpeechEvent.InterimContent,\n                content: interimContent\n              });\n            });\n          }\n        }\n      };\n    });\n  }\n\n  onError(): Observable<SpeechNotification<never>> {\n    return new Observable(observer => {\n      this.recognition.onerror = (event) => {\n        // tslint:disable-next-line:no-any\n        const eventError: string = (event as any).error;\n        console.log('error', eventError);\n        let error: SpeechError;\n        switch (eventError) {\n          case 'no-speech':\n            error = SpeechError.NoSpeech;\n            break;\n          case 'audio-capture':\n            error = SpeechError.AudioCapture;\n            break;\n          case 'not-allowed':\n            error = SpeechError.NotAllowed;\n            break;\n          default:\n            error = SpeechError.Unknown;\n            break;\n        }\n\n        this.ngZone.run(() => {\n          observer.next({\n            error\n          });\n        });\n      };\n    });\n  }\n\n  stop(): void {\n    this.recognition.stop();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SpeechSynthesizerService {\n  speechSynthesizer!: SpeechSynthesisUtterance;\n\n  constructor() {\n    this.initSynthesis();\n  }\n\n  initSynthesis(): void {\n    this.speechSynthesizer = new SpeechSynthesisUtterance();\n    this.speechSynthesizer.volume = 1;\n    this.speechSynthesizer.rate = 1;\n    this.speechSynthesizer.pitch = 0.2;\n  }\n\n  speak(message: string, language: string): void {\n    this.speechSynthesizer.lang = language;\n    this.speechSynthesizer.text = message;\n    speechSynthesis.speak(this.speechSynthesizer);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from './material/material.module';\nimport { ModalHelpComponent } from './components/modal-help/modal-help.component';\n\n@NgModule({\n  declarations: [ModalHelpComponent],\n  imports: [\n    CommonModule,\n    MaterialModule\n  ],\n  exports: [\n    MaterialModule,\n    ModalHelpComponent\n  ]\n})\nexport class SharedModule { }\n","/**\n * Class for managing stylesheets. Stylesheets are loaded into named slots so that they can be\n * removed or changed later.\n */\nexport class StyleManager {\n  /**\n   * Set the stylesheet with the specified key.\n   */\n  setStyle(key: string, href: string): void {\n    getLinkElementForKey(key).setAttribute('href', href);\n  }\n\n  /**\n   * Remove the stylesheet with the specified key.\n   */\n  removeStyle(key: string): void {\n    const existingLinkElement = getExistingLinkElementByKey(key);\n    if (existingLinkElement) {\n      document.head.removeChild(existingLinkElement);\n    }\n  }\n}\n\nfunction getLinkElementForKey(key: string): Element {\n  return getExistingLinkElementByKey(key) || createLinkElementWithKey(key);\n}\n\nfunction getExistingLinkElementByKey(key: string): Element | null {\n  return document.head.querySelector(\n    `link[rel=\"stylesheet\"].${getClassNameForKey(key)}`\n  );\n}\n\nfunction createLinkElementWithKey(key: string): HTMLLinkElement {\n  const linkEl = document.createElement('link');\n  linkEl.setAttribute('rel', 'stylesheet');\n  linkEl.classList.add(getClassNameForKey(key));\n  document.head.appendChild(linkEl);\n  return linkEl;\n}\n\nfunction getClassNameForKey(key: string): string {\n  return `style-manager-${key}`;\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { merge, Observable, of, Subject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { defaultLanguage, languages } from '../shared/model/languages';\nimport { SpeechError } from '../shared/model/speech-error';\nimport { SpeechEvent } from '../shared/model/speech-event';\nimport { SpeechRecognizerService } from '../shared/services/web-apis/speech-recognizer.service';\nimport { ActionContext } from '../shared/services/actions/action-context';\nimport { SpeechNotification } from '../shared/model/speech-notification';\nimport { HttpClient } from '@angular/common/http';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n\ninterface User {\n  sl: number;\n  name: string;\n  dob: string;\n}\n\n\n@Component({\n  selector: 'wsa-web-speech',\n  templateUrl: './web-speech.component.html',\n  styleUrls: ['./web-speech.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WebSpeechComponent implements OnInit {\n  languages: string[] = languages;\n  currentLanguage: string = defaultLanguage;\n  totalTranscript?: string;\n  modes: string[]= ['Speak','Search']\n  modeSelect:string='Speak'\n  transcript$?: Observable<string>;\n  listening$?: Observable<boolean>;\n  errorMessage$?: Observable<string>;\n  defaultError$ = new Subject<string | undefined>();\n\n  constructor(\n    private speechRecognizer: SpeechRecognizerService,\n    private actionContext: ActionContext,\nprivate http:HttpClient, private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.getDetails();\n    const webSpeechReady = this.speechRecognizer.initialize(this.currentLanguage);\n    if (webSpeechReady) {\n      this.initRecognition();\n    }else {\n      this.errorMessage$ = of('Your Browser is not supported. Please try Google Chrome.');\n    }\n  }\n\n  start(): void {\n    if (this.speechRecognizer.isListening) {\n      this.stop();\n      return;\n    }\n\n    this.defaultError$.next(undefined);\n    this.speechRecognizer.start();\n  }\n\n  stop(): void {\n    this.totalTranscript=undefined\n    this.speechRecognizer.stop();\n  }\n\n  selectMode(mode:string): void {\n    if (this.speechRecognizer.isListening) {\n      this.stop();\n        }\n      this.speechRecognizer.setLanguage(this.currentLanguage);\n      this.modeSelect= mode\n\n  }\n  displayedColumns: string[] = ['sl', 'name', 'dob'];\n  dataSource = new MatTableDataSource<any>(); // Use MatTableDataSource for pagination\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\tpublic array: any;\n  \n  \ngetDetails(){\n  this.http.get(\"http://localhost:8089/client/getClientDetails\").subscribe( (x:any)=>{\n    this.totalTranscript=undefined\n    this.dataSource.data=x\n    this.dataSource.paginator=this.paginator\n    this.array = this.dataSource.data;\n    this.totalSize = this.array.length;\n    this.cdr.detectChanges();\n\n    console.log( this.dataSource)\n\n  }) \n}\npublic pageSize = 5;\n  public currentPage = 0;\n  public totalSize = 0;\nonPaginateChange(event:any) {\n  if (this.currentPage !== event.pageIndex) {\n    console.log(event.pageIndex);\n    this.currentPage = event.pageIndex;\n    this.pageSize =event.pageSize\n  }\n  }\n\nreset(){\n  this.totalTranscript = ''\n}\n\n\n  postMessage(){ \n  if(this.modeSelect === 'Speak'){\n  this.http.post<string>(\"http://localhost:8089/client/saveClientDetails\",this.totalTranscript,{ responseType: 'text' as 'json' }).subscribe( (x:any)=>{\n    console.log(x)\n\n    if(x===\"Data saved successfully.\"){\n      this.totalTranscript=undefined\n    }\n    this.getDetails()\n  })\n}else{\n  this.http.post(\"http://localhost:8089/client/fetchClientDetails\",this.totalTranscript).subscribe( (x:any)=>{\n    this.totalTranscript=undefined\n    this.dataSource.data=x\n    this.dataSource.paginator=this.paginator\n    this.array = this.dataSource.data;\n    this.totalSize = this.array.length;\n    this.cdr.detectChanges();\n\n    console.log( this.dataSource)\n  })\n\n}\n  }\n\n\n  private initRecognition(): void {\n    this.transcript$ = this.speechRecognizer.onResult().pipe(\n      tap((notification) => {\n        this.processNotification(notification);\n      }),\n      map((notification) => notification.content || '')\n    );\n\n    this.listening$ = merge(\n      this.speechRecognizer.onStart(),\n      this.speechRecognizer.onEnd()\n    ).pipe(map((notification) => notification.event === SpeechEvent.Start));\n\n    this.errorMessage$ = merge(\n      this.speechRecognizer.onError(),\n      this.defaultError$\n    ).pipe(\n      map((data) => {\n        if (data === undefined) {\n          return '';\n        }\n        if (typeof data === 'string') {\n          return data;\n        }\n        let message;\n        switch (data.error) {\n          case SpeechError.NotAllowed:\n            message = `Cannot run the demo.\n            Your browser is not authorized to access your microphone.\n            Verify that your browser has access to your microphone and try again.`;\n            break;\n          case SpeechError.NoSpeech:\n            message = `No speech has been detected. Please try again.`;\n            break;\n          case SpeechError.AudioCapture:\n            message = `Microphone is not available. Plese verify the connection of your microphone and try again.`;\n            break;\n          default:\n            message = '';\n            break;\n        }\n        return message;\n      })\n    );\n  }\n\n  private processNotification(notification: SpeechNotification<string>): void {\n    if (notification.event === SpeechEvent.FinalContent) {\n      const message = notification.content?.trim() || '';\n      this.actionContext.processMessage(message, this.currentLanguage);\n      // this.actionContext.runAction(message, this.currentLanguage);\n      this.totalTranscript = this.totalTranscript\n        ? `${this.totalTranscript}\\n${message}`\n        : notification.content;\n       //s this.postMessage()\n    }\n  }\n}\n","  <section>\n    <mat-card *ngIf=\"errorMessage$| async as errorMessage\" class=\"notification\">{{errorMessage}}</mat-card>\n  </section>\n <section>\n    <mat-form-field>\n      <mat-label>Select your mode</mat-label>\n      <mat-select [(value)]=\"modeSelect\">\n        <mat-option *ngFor=\"let mode of modes\" [value]=\"mode\" (click)=\"selectMode(mode)\">\n          {{mode}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </section>\n  <section>\n    <button mat-fab *ngIf=\"listening$ | async; else mic\" (click)=\"stop()\">\n      <mat-icon class=\"soundwave\">mic</mat-icon>\n    </button>\n    <ng-template #mic>\n      <button mat-fab (click)=\"start()\">\n        <mat-icon>mic</mat-icon>\n      </button>\n    </ng-template>\n  </section>\n<section *ngIf=\"transcript$ | async\">\n  <mat-card class=\"notification mat-elevation-z4\">{{transcript$ | async}}</mat-card>\n</section>\n<section>\n  <mat-form-field class=\"speech-result-width\">\n    <textarea matInput [value]=\"totalTranscript || ''\" placeholder=\"Speech Input Result\" rows=\"15\" disabled=\"true\"></textarea>\n  </mat-form-field>\n</section>\n<section>\n  <button mat-fab matTooltip=\"Send data\" (click)=\"postMessage()\" style=\"border-radius: 0; width: 100px; height: 50px; margin-bottom: 10px;margin-right:10px\">\n    <mat-icon>send</mat-icon>\n  </button>\n  <button mat-fab color=\"warn\" matTooltip=\"Reset speech\" (click)=\"reset()\" style=\"border-radius: 0; width: 100px; height: 50px;\">\n    <mat-icon>cancel</mat-icon>\n  </button>\n</section>\n\n<section> \n <!-- app.component.html -->\n<div class=\"container mt-5\">\n  <h2 class=\"text-center\">Client Details</h2>\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <!-- Serial Number Column -->\n    <ng-container matColumnDef=\"sl\">\n      <th mat-header-cell *matHeaderCellDef> SL </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.sl}} </td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n  \n    <!-- Date of Birth Column -->\n    <ng-container matColumnDef=\"dob\">\n      <th mat-header-cell *matHeaderCellDef> Date of Birth </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.dob}} </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <!-- Paginator -->\n  <mat-paginator #paginator \n  [pageSize]=\"pageSize\" [pageSizeOptions]=\"[2,5, 10, 20]\" [showFirstLastButtons]=\"true\" [length]=\"totalSize\"\n[pageIndex]=\"currentPage\" (page)=\"onPaginateChange($event)\"\n          aria-label=\"Select page of periodic elements\">\n        </mat-paginator>\n      </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WebSpeechComponent } from './web-speech.component';\nimport { MaterialModule } from '../shared/material/material.module';\nimport { MatTableModule } from '@angular/material/table'; // Import MatTableModule\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n\n@NgModule({\n  declarations: [WebSpeechComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    MatTableModule,\n    MatPaginatorModule\n\n  ]\n})\nexport class WebSpeechModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["ChangeDetectorRef","merge","of","Subject","map","tap","defaultLanguage","languages","SpeechError","SpeechEvent","MatTableDataSource","MatPaginator","i0","WebSpeechComponent","constructor","speechRecognizer","actionContext","http","cdr","ngOnInit","getDetails","webSpeechReady","initialize","currentLanguage","initRecognition","errorMessage$","start","isListening","stop","defaultError$","next","undefined","totalTranscript","selectMode","mode","setLanguage","modeSelect","get","subscribe","x","dataSource","data","paginator","array","totalSize","length","detectChanges","console","log","onPaginateChange","event","currentPage","pageIndex","pageSize","reset","postMessage","post","responseType","transcript$","onResult","pipe","notification","processNotification","content","listening$","onStart","onEnd","Start","onError","message","error","NotAllowed","NoSpeech","AudioCapture","FinalContent","trim","processMessage","selectors","viewQuery","ctx","_r3"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}